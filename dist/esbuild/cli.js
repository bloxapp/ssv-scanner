#!/usr/bin/env node
"use strict";(()=>{var q=Object.create;var _=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var H=Object.getOwnPropertyNames;var U=Object.getPrototypeOf,W=Object.prototype.hasOwnProperty;var h=(o=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(o,{get:(r,e)=>(typeof require!="undefined"?require:r)[e]}):o)(function(o){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+o+'" is not supported')});var L=(o,r,e,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let t of H(r))!W.call(o,t)&&t!==e&&_(o,t,{get:()=>r[t],enumerable:!(s=M(r,t))||s.enumerable});return o};var v=(o,r,e)=>(e=o!=null?q(U(o)):{},L(r||!o||!o.__esModule?_(e,"default",{value:o,enumerable:!0}):e,o));var l=(o,r,e)=>new Promise((s,t)=>{var c=i=>{try{a(e.next(i))}catch(d){t(d)}},n=i=>{try{a(e.throw(i))}catch(d){t(d)}},a=i=>i.done?s(i.value):Promise.resolve(i.value).then(c,n);a((e=e.apply(o,r)).next())});var j=v(h("figlet"));var E={name:"ssv-scanner",version:"1.0.1",description:"Tool for retrieving events data (cluster snapshots and owner nonce) from the SSV network contract.",author:"SSV.Network",repository:"https://github.com/bloxapp/ssv-scanner",license:"MIT",keywords:["ssv","ssv.network","cluster","nonce","scanner"],main:"./dist/tsc/src/main.js",types:"./dist/tsc/src/main.d.ts",bin:{"ssv-keys":"./dist/tsc/src/cli.js"},engines:{node:">=12"},scripts:{"dev:cli":"ts-node src/cli.ts",cli:"node ./dist/tsc/src/cli.js",lint:"eslint src/ --ext .js,.jsx,.ts,.tsx",clean:"rm -rf dist build package","ts-node":"ts-node","copy-json":"cpy './src/shared/abi/*.json' './dist/tsc/src/shared/abi/'",build:"tsc -p tsconfig.json","build-all":"yarn clean && yarn build && yarn copy-json && yarn esbuild",esbuild:"node ./esbuild.js","pre-commit":"yarn test && yarn lint && yarn build-all"},devDependencies:{"@types/argparse":"^2.0.10","@types/cli-progress":"^3.11.0","@types/node":"^15.14.9","cpy-cli":"^5.0.0",esbuild:"^0.14.38","esbuild-node-externals":"^1.4.1",eslint:"^7.32.0","ts-node":"^10.9.1",typescript:"^4.6.4"},dependencies:{"@types/figlet":"^1.5.4",argparse:"^2.0.1","cli-progress":"^3.11.2",figlet:"^1.5.2",web3:"^1.10.0"},licenses:[{MIT:"SEE LICENSE IN LICENCE FILE"}]};var D=h("argparse");var I=h("argparse"),b=class{constructor(r,e){this.name=r;this.description=e;this.parser=new I.ArgumentParser({description:this.description}),this.setArguments(this.parser)}parse(r){return this.parser.parse_args(r)}};var V=v(h("cli-progress"));var O=v(h("web3"));var A={MAINNET:"prod:v4.mainnet",PRATER:"prod:v4.prater",PRATER_STAGE:"stage:v4.prater"},f=class{constructor(r,e,s){let[t,c]=e.split(".");t=t.toUpperCase(),c=c.toUpperCase();let n;try{n=h(`../shared/abi/${r}.${e}.abi.json`)}catch(i){throw console.error(`Failed to load JSON data from ${r}.${e}.abi.json`,i),i}let a;try{a=h(`../shared/abi/${r}.${e}.views.abi.json`)}catch(i){throw console.error(`Failed to load JSON data from ${r}.${e}.views.abi.json`,i),i}if(!n.contractAddress||!n.abi||!n.genesisBlock)throw new Error(`Missing core data in JSON for ${r}.${e}`);if(!a.contractAddress||!a.abi)throw new Error(`Missing views data in JSON for ${r}.${e}`);this.contract={version:t,network:c,address:n.contractAddress,addressViews:a.contractAddress,abi:n.abi,abiViews:a.abi,genesisBlock:n.genesisBlock},this.web3=new O.default(s)}get abiCore(){return this.contract.abi}get abiViews(){return this.contract.abiViews}get contractCore(){return new this.web3.eth.Contract(this.abiCore,this.contract.address)}get contractViews(){return new this.web3.eth.Contract(this.abiViews,this.contract.addressViews)}get genesisBlock(){return this.contract.genesisBlock}};var x=v(h("web3")),y=class{constructor(r){this.DAY=5400;this.WEEK=this.DAY*7;this.MONTH=this.DAY*30;if(!r.nodeUrl)throw Error("ETH1 node is required");if(!r.ssvNetwork)throw Error("Network is required");if(!r.ownerAddress)throw Error("Cluster owner address is required");if(r.ownerAddress.length!==42)throw Error("Invalid owner address length.");if(!r.ownerAddress.startsWith("0x"))throw Error("Invalid owner address.");this.params=r,this.params.contractAddress=new x.default().utils.toChecksumAddress(this.params.contractAddress),this.params.ownerAddress=new x.default().utils.toChecksumAddress(this.params.ownerAddress)}};var C=class extends y{constructor(){super(...arguments);this.eventsList=["ValidatorAdded"]}run(e){return l(this,null,function*(){e&&(console.log(`
Scanning blockchain...`),this.progressBar=new V.default.SingleBar({},V.default.Presets.shades_classic));try{let s=yield this._getLatestNonce(e);return e&&this.progressBar.stop(),s}catch(s){throw e&&this.progressBar.stop(),new Error(s)}})}_getLatestNonce(e){return l(this,null,function*(){let[s,t]=A[this.params.ssvNetwork.toUpperCase()].split(":"),c=new f(s,t,this.params.nodeUrl),n;try{n=yield c.web3.eth.getBlockNumber()}catch(g){throw new Error("Could not access the provided node endpoint.")}try{yield c.contractCore.methods.owner().call()}catch(g){throw new Error("Could not find any cluster snapshot from the provided contract address.")}let a=this.MONTH,i=0,d=c.genesisBlock,k=c.web3.eth.abi.encodeParameter("address",this.params.ownerAddress),p={fromBlock:d,toBlock:n,topics:[null,k]};e&&this.progressBar.start(n,0);do{let g;try{g=(yield c.contractCore.getPastEvents("AllEvents",p)).filter(u=>this.eventsList.includes(u.event)),i+=g.length,p.fromBlock=p.toBlock+1}catch(u){if(a===this.MONTH)a=this.WEEK;else if(a===this.WEEK)a=this.DAY;else throw new Error(u)}p.toBlock=Math.min(p.fromBlock+a,n),e&&this.progressBar.update(p.toBlock)}while(p.toBlock-p.fromBlock>0);return e&&this.progressBar.update(n,n),i})}};var B=class extends b{constructor(){super("nonce","Handles nonce operations")}setArguments(r){r.add_argument("-nw","--ssv-network",{help:"The network",choices:["mainnet","prater"],required:!0,dest:"ssvNetwork"}),r.add_argument("-n","--node-url",{help:"ETH1 (execution client) node endpoint url",required:!0,dest:"nodeUrl"}),r.add_argument("-oa","--owner-address",{help:"The cluster owner address (in the SSV contract)",required:!0,dest:"ownerAddress"})}run(r){return l(this,null,function*(){try{let s=yield new C(r).run(!0);console.log("Next Nonce:",s)}catch(e){console.error("\x1B[31m",e.message)}})}};var P=v(h("cli-progress"));var S=class extends y{constructor(){super(...arguments);this.eventsList=["ClusterDeposited","ClusterWithdrawn","ValidatorRemoved","ValidatorAdded","ClusterLiquidated","ClusterReactivated"]}run(e,s){return l(this,null,function*(){if(!(Array.isArray(e)&&this._isValidOperatorIds(e.length)))throw Error("Comma-separated list of operator IDs. The amount must be 3f+1 compatible.");e=[...e].sort((n,a)=>n-a),s&&(console.log(`
Scanning blockchain...`),this.progressBar=new P.default.SingleBar({},P.default.Presets.shades_classic));let c=yield this._getClusterSnapshot(e,s);return s&&this.progressBar.stop(),c})}_getClusterSnapshot(e,s){return l(this,null,function*(){let t,[c,n]=A[this.params.ssvNetwork.toUpperCase()].split(":"),a=new f(c,n,this.params.nodeUrl);try{t=yield a.web3.eth.getBlockNumber()}catch(w){throw new Error("Could not access the provided node endpoint.")}try{yield a.contractCore.methods.owner().call()}catch(w){throw console.log("eee",w),new Error("Could not find any cluster snapshot from the provided contract address.")}let i=this.MONTH,d,k=0,p=a.genesisBlock,g=a.web3.eth.abi.encodeParameter("address",this.params.ownerAddress),u={fromBlock:Math.max(t-i,p),toBlock:t,topics:[null,g]};for(s&&this.progressBar.start(t,0);!d&&u.fromBlock>=p;){let w;try{w=yield a.contractCore.getPastEvents("allEvents",u),w.filter(m=>this.eventsList.includes(m.event)).filter(m=>JSON.stringify(m.returnValues.operatorIds.map($=>+$))===JSON.stringify(e)).forEach(m=>{m.blockNumber>k&&(k=m.blockNumber,d=m.returnValues.cluster)}),u.toBlock=u.fromBlock}catch(m){console.error(m),i===this.MONTH?i=this.WEEK:i===this.WEEK&&(i=this.DAY)}u.fromBlock=u.toBlock-i,s&&this.progressBar.update(t-(u.toBlock-i))}return s&&this.progressBar.update(t,t),d=d||["0","0","0",!0,"0"],{payload:{Owner:this.params.ownerAddress,Operators:e.sort((w,m)=>w-m).join(","),Block:k||t,Data:d.join(",")},cluster:{validatorCount:d[0],networkFeeIndex:d[1],index:d[2],active:d[3],balance:d[4]}}})}_isValidOperatorIds(e){return!(e<4||e>13||e%3!=1)}};var N=class extends b{constructor(){super("cluster","Handles cluster operations")}setArguments(r){r.add_argument("-nw","--ssv-network",{help:"The network",choices:["mainnet","prater"],required:!0,dest:"ssvNetwork"}),r.add_argument("-n","--node-url",{help:"ETH1 (execution client) node endpoint url",required:!0,dest:"nodeUrl"}),r.add_argument("-oa","--owner-address",{help:"The cluster owner address (in the SSV contract)",required:!0,dest:"ownerAddress"}),r.add_argument("-oids","--operator-ids",{help:"Comma-separated list of operators IDs regarding the cluster that you want to query",required:!0,dest:"operatorIds"})}run(r){return l(this,null,function*(){try{let e=r.operatorIds.split(",").map(c=>{if(Number.isNaN(+c))throw new Error("Operator Id should be the number");return+c}).sort((c,n)=>c-n),t=yield new S(r).run(e,!0);console.table(t.payload),console.log("Cluster snapshot:"),console.table(t.cluster),console.log(JSON.stringify({block:t.payload.Block,"cluster snapshot":t.cluster,cluster:Object.values(t.cluster)},null,"  "))}catch(e){console.error("\x1B[31m",e.message)}})}};var J=o=>l(void 0,null,function*(){return new Promise(r=>{(0,j.default)(o,(e,s)=>{if(e)return r("");r(s)})})});function T(){return l(this,null,function*(){let o=new D.ArgumentParser,r=o.add_subparsers({title:"commands",dest:"command"}),e=new N,s=new B;e.setArguments(r.add_parser(e.name,{add_help:!0})),s.setArguments(r.add_parser(s.name,{add_help:!0}));let t=`SSV Scanner v${E.version}`,c=yield J(t);if(c){console.log(" -----------------------------------------------------------------------------------"),console.log(`${c||t}`),console.log(" -----------------------------------------------------------------------------------");for(let a of String(E.description).match(/.{1,75}/g)||[])console.log(` ${a}`);console.log(` -----------------------------------------------------------------------------------
`)}let n=o.parse_args();switch(n.command){case e.name:yield e.run(n);break;case s.name:yield s.run(n);break;default:console.error("Command not found"),process.exit(1)}})}T();})();
